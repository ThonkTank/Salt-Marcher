# Salt Marcher Repository Overview

Dieses Repository enthält zwei vollständig getrennte Obsidian-Plugins:

- **Salt Marcher (`plugins/salt-marcher`)** – liefert Kartographie-, Encounter- und Bibliothekswerkzeuge für hex-basierte Kampagnen.
- **Layout Editor (`plugins/layout-editor`)** – stellt einen eigenständigen visuellen Layout-Editor inklusive Layout-Bibliothek bereit.

Beide Plugins besitzen eigene Build-Pipelines, Manifeste und Overview-Dokumente innerhalb ihrer Verzeichnisse.

## Struktur

```
Salt-Marcher/
├─ AGENTS.md
├─ README.md                     # Projektweite Hinweise (SRD-Credits)
├─ plugins/
│  ├─ salt-marcher/              # Hauptplugin (Cartographer, Library, Encounter)
│  │  ├─ manifest.json
│  │  ├─ esbuild.config.mjs
│  │  ├─ package.json / package-lock.json
│  │  ├─ tsconfig.json
│  │  ├─ main.js                 # Build-Output
│  │  ├─ PluginOverview.txt      # Detaillierte Dokumentation des Salt-Marcher-Plugins
│  │  └─ src/…                   # TypeScript-Quellcode (app, apps, core, ui)
│  └─ layout-editor/             # Eigenständiger Layout-Editor
│     ├─ manifest.json
│     ├─ esbuild.config.mjs
│     ├─ package.json / package-lock.json
│     ├─ tsconfig.json
│     ├─ main.js                 # Build-Output
│     └─ src/…                   # Layout-Editor-Code + Overview
└─ "References, do not delete!/" # SRD-Referenzen (unverändert)
```

## Features & Verantwortlichkeiten

- **Salt Marcher Plugin:** Registriert Cartographer-, Encounter- und Library-Views, injiziert eigenes CSS und verwaltet Terrain-/Regions-Daten. Enthält alle Hex-Mapper-, Travel- und Library-Funktionen.
- **Layout Editor Plugin:** Registriert den Layout-Editor als eigenständigen View, injiziert dediziertes Styling, stellt ein API (`getApi()`) für Registry-/Persistenz-Hooks bereit und verwaltet Layout-Dateien unter `LayoutEditor/Layouts`.
- **Getrennte Builds:** Jedes Plugin wird über sein eigenes `esbuild.config.mjs` gebündelt. Die erzeugten `main.js`-Artefakte liegen direkt im jeweiligen Plugin-Ordner und werden durch die zugehörigen Manifeste geladen.
- **Overview-Dokumente:** Detailinformationen zu Struktur, Datenfluss und Zuständigkeiten stehen in `plugins/salt-marcher/PluginOverview.txt` und `plugins/layout-editor/src/LayoutEditorOverview.txt`.

## Hinweise zur Zusammenarbeit

- Plugins sind bewusst entkoppelt: Es bestehen keine direkten Imports zwischen den Codebasen.
- Gemeinsame Funktionalität sollte bei Bedarf als eigene Hilfen in beiden Plugins dupliziert oder neu konzipiert werden (kein Shared-Code-Verzeichnis vorhanden).
- Beim Arbeiten an einem der Plugins immer die zugehörige Overview-Datei aktualisieren und das Build-Artefakt (`main.js`) neu erzeugen.
